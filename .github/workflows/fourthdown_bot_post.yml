name: Fourth Down Bot

on:
  # Runs every 5 minutes (minimum allowed)
  schedule:
    - cron: "*/5 * * * *"
  # Manual trigger with a dry-run toggle
  workflow_dispatch:
    inputs:
      dry_run:
        description: "Run without posting (1 = DRY RUN)"
        required: false
        default: "0"
        type: choice
        options: ["0", "1"]

permissions:
  contents: read

# Prevent overlapping runs
concurrency:
  group: fourthdown-bot
  cancel-in-progress: true

jobs:
  run-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      TZ: America/Chicago
      # Bluesky (required to post there)
      BSKY_HANDLE: ${{ secrets.BSKY_HANDLE }}
      BSKY_APP_PASSWORD: ${{ secrets.BSKY_APP_PASSWORD }}
      # Mastodon (optional; if unset, will be skipped)
      MASTO_SERVER: ${{ secrets.MASTO_SERVER }}
      MASTO_TOKEN: ${{ secrets.MASTO_TOKEN }}
      # Bot config
      DRY_RUN: ${{ inputs.dry_run || '0' }}
      NEAR_TOL_PCT: "3"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true   # enable if your .rds models use Git LFS

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'

      - name: Install R packages (CRAN)
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::dplyr
            any::data.table
            any::jsonlite
            any::httr2
            any::glue
            any::nflfastR
            any::nflreadr
            any::readr
            any::lubridate
            any::rtoot        # needed for Mastodon posting

      - name: Cache nflfastR/nflreadr data
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/nflfastR
            ~/.cache/nflreadr
          key: nflcache-${{ runner.os }}-${{ hashFiles('**/*.R') }}
          restore-keys: |
            nflcache-${{ runner.os }}-

      - name: Create runtime dirs
        run: mkdir -p data/cache logs R/bots

      - name: Dry-run banner
        if: env.DRY_RUN == '1'
        run: echo ">>> DRY RUN ENABLED (no posts will be sent)."

      # Two passes to tighten cadence to ~2â€“3 mins within a 5-min cron window
      - name: Run bot twice
        shell: bash
        run: |
          echo ">>> First pass"
          Rscript -e 'source("run_once.R"); run_once()' || true
          echo ">>> Sleep 60s"
          sleep 60
          echo ">>> Second pass"
          Rscript -e 'source("run_once.R"); run_once()' || true
